extends layout

block head
  
  script(src='/javascripts/ResultTableHTMLBuilder.js')
  script(src='/javascripts/AppNotifier.js')

block content

  .navbar.navbar-default.navbar-fixed-top.bottom-shadow(role='navigation')
    .container-fluid
        .navbar-header
          //button.navbar-toggle(type='button', data-toggle='collapse', data-target='.navbar-collapse')
          a.logo(href='javascript:void(0);')
            img(src="/images/bs.png",class="img-responsive",style="width: 29px; height: 35px;")
          a.navbar-brand(href='javascript:void(0);')=title
        #tips.small.pull-right.hidden-xs
          b dica:&nbsp;
          span

  form#queryForm
    div(data-trigger-editor-size)

      .container-fluid
        .row.clearfix
          - var titleSet = {ip: "ip", port: "porta", db: "schema", user: "usuário", pass: "senha"}
          .col-md-2.col-xs-3
              .input-group
                span.input-group-addon(title=titleSet.ip) #
                input.form-control(name="ip",value="10.205.105.80",placeholder=titleSet.ip)
          .col-md-2.col-xs-3
              .input-group
                span.input-group-addon(title=titleSet.port) :
                input.form-control(name="port",value="50000",placeholder=titleSet.port)
          .col-md-2.col-xs-6
              .input-group.pull-left.col-xs-6.col-md-12
                span.input-group-addon(title=titleSet.db) [ ]
                input.form-control(name="db",value="DB2_TEST",placeholder=titleSet.db)
          .col-md-2.col-xs-3
              .input-group
                span.input-group-addon(title=titleSet.user +' (ex: "apstbucb")') @
                input.form-control(name="user",placeholder=titleSet.user)
          .col-md-2.col-xs-3
              .input-group
                span.input-group-addon(title=titleSet.pass +' (ex: "apstbucb")') ?
                input.form-control(name="password",type="password",placeholder=titleSet.pass)
          .col-md-2.col-xs-6
            p
              //-input(type="submit", style="position: absolute; left: -9999px; width: 1px; height: 1px;")
              button#queryBtn.btn.btn-default.pull-right.btn-success(type="submit") Executar&nbsp;&nbsp;&nbsp;
                span.glyphicon.glyphicon-play

      .container-fluid
        .row.clearfix
          .col-lg-12
            p 
              #code-editor
                | 
                | -- Atalhos:
                | --   ctrl + enter   executa código
                | --   ctrl + space   autocompletar o SQL
                | --   ctrl + ; ou /  comenta seleção
                | 
                | -- ATENÇÃO: NOMES DE COLUNA DUPLICADO ESTÃO SENDO SUPRIMIDOS
                | --         (driver ODBC em correção)
                | 
                | select * from sysibm.systables
                | where owner = 'DBPROD'
                | and type = 'T'
                | order by children desc, name asc
                | fetch first 100 rows only



    .container-fluid   
      .row.clearfix
        .col-xs-12
          #result.clearfix.overflowable(data-is-height-filler)


  script(src='/addins/jquery.cycle.lite.js')
  script(src='/addins/ace-builds-1.1.3/src-min-noconflict/ace.js')
  script(src='/addins/ace-builds-1.1.3/src-min-noconflict/ext-language_tools.js')
  //- script(src='/addins/DataTables-1.10.7/media/js/jquery.dataTables.min.js')
  script.

    ace.require("ace/ext/language_tools");
    var editor = ace.edit("code-editor");
    editor.setTheme("ace/theme/dreamweaver");
    editor.getSession().setMode("ace/mode/sql");
    editor.setOptions({
      enableBasicAutocompletion: true
      //,enableSnippets: true
    });

    editor.commands.addCommand({
      name: 'Submit shortcut',
      bindKey: {win: 'Ctrl-Enter',  mac: 'Command-Enter'},
      exec: function(editor) {
          $('#queryForm').submit();
        }
    });

    var appNotifier = new AppNotifier('Blazing Squirrel', '/images/bs-notification.ico');

    appNotifier.requestPermission();

    var tipCycle = {
      
      counter: 0,
      
      tips: [
        '<b>"Shift + scroll"</b> rola os resultados horizontalmente! (Alguns navegadores)', 
        '<b>"Ctrl + enter"</b> executa c&oacute;digo',
        '<b>"Ctrl + espa&ccedil;o"</b> autocompleta o SQL',
        '<b>"Ctrl + / (ou ;)"</b> comenta sele&ccedil;&atilde;o',
        'Autorize as <b>notifica&ccedil;&otilde;es de desktop</b> para maior conforto.'
      ],

      cycle: function() {
        $('#tips > span').hide().html(tipCycle.tips[tipCycle.counter]).fadeIn();

        if (++tipCycle.counter > tipCycle.tips.length) tipCycle.counter = 0;

        setTimeout(tipCycle.cycle, 5000);
      }
    };


    function recalcHeightFillers(root) {
      $('[data-is-height-filler]', typeof root === 'string' || root instanceof jQuery ? root : null).each(function() {	
        var mod = parseInt(this.getAttribute('data-height-modifier'), 10) || 0;
        var $el = $(this);
        $el.height($(window).height() - mod - $el.offset().top - 2);
      });
      root = null;
    }

    $(function($) {
      $('input[name="user"]').val(localStorage.user || '');
      $('input[name="password"]').val(localStorage.password || '');
      var lastQuery = localStorage.query;
      if (lastQuery) editor.setValue(lastQuery, 0);

      $('#queryBtn').click(function() {
        $('#queryForm').submit();
      });

      
      tipCycle.cycle();
      recalcHeightFillers();

      $('[data-trigger-editor-size]').mouseenter(function() {
        var $el = $('#code-editor');
        var originalH = $el.data('original-height');
        if (!originalH) {
          $el.data('original-height', originalH = $el.height());
        }
        var halfWinHeight = $(window).height() * 0.5;
        $el.stop();
        if (halfWinHeight * 0.5 > originalH) {
          $el.css({height: halfWinHeight});
          editor.resize(true);
          recalcHeightFillers();
        }
      }).mouseleave(function() {
        var $el = $('#code-editor');
        $el.css('height', $el.data('original-height'));
        editor.resize(true);
        recalcHeightFillers();

      })
      $(window).resize(recalcHeightFillers);
    });

    function getFormData() {
      return 'query=' + encodeURIComponent(editor.getCopyText() || editor.getValue()) + '&' + $('#queryForm').serialize();
    }

    

    function saveLocalData() {
      localStorage.user = $('input[name="user"]').val();
      localStorage.password = $('input[name="password"]').val();
      localStorage.query = editor.getValue();
    } 

    function display(content, cb) {
      $('#result').hide().html(content).show(200, cb);
    }

    var lastExecuteXHR = null;

    $('#queryForm').submit(function (event) {

      $('#queryBtn').prop('disabled', true);

      if (lastExecuteXHR) {
        lastExecuteXHR.abort();
        lastExecuteXHR = null;
      }

      display('<h4><span class="label label-default">Executando...</span></h4>')

      Pace.track(function() {
        lastExecuteXHR = $.ajax({

          type: 'post',
          url: '/query',
          dataType: 'json',
          cache: false,
          data: getFormData() 

        }).done(function (data) {

          display(

            '<h4><span class="label label-primary">Recebido... preparando apresenta&ccedil;&atilde;o...</span></h4>', 

            function() {

              'use strict';
              
              var document = window.document;

              if ($.type(data) !== 'array') {
                if (data && data.isError && data.error) {
                  return display('<h4><span class="label label-danger">Error</span></h4>'+ data.error);
                }
                else {
                  return display('<h4><span class="label label-danger">Error</span></h4>Ocorreu um erro indefinido no driver IBM. Informe ao responsável.');
                }
              }
              else if (!data.length){
                return display('<h4><span class="label label-warning">Nenhum registro foi encontrado.</span></h4>');
              }

              // data = escapeHTMLInJSON(data);

              saveLocalData();

              display(new ResultTableHTMLBuilder().build(data, 'table table-bordered table-hover table-condensed table-striped small'));

              appNotifier.show(null, "Operação finalizada.", true);

              data = null;
            }
          );

        })
        .fail(function( jqXHR, textStatus, errorThrown ) {
          if (!errorThrown.message && jqXHR.status === 400) {
            display('<h4><span class="label label-danger">Error</span></h4>Você está desconectado da rede. Verifique sua conexão.');
          }
          display('<h4><span class="label label-danger">Error</span></h4>'+ ( errorThrown.message || textStatus + ' (' + jqXHR.status + ')' ));
        })
        .always(function() {
          $('#queryBtn').prop('disabled', false);
        });
      });
      

      return false;
    });
